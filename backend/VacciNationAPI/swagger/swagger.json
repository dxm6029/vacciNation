{
  "swagger": "2.0",
  "info": {
    "description": "VacciNation Project Swagger Documentation",
    "version": "1.0.0",
    "title": "VacciNation"
  },
  "tags": [
    {
      "name": "Database",
      "description": "basic database connection functions"
    },
    {
      "name": "User",
      "description": "Add/Update/Modify/View User Accounts"
    },
    {
      "name": "Appointments & Timeslots",
      "description": "Add/update/delete/view appointments and time slots"
    },
    {
      "name": "Vaccines",
      "description": "Add/update/delete/view vaccines and vaccine info"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/DBConnect": {
      "get": {
        "tags": [
          "Database"
        ],
        "summary": "test the ability to connect to our database",
        "description": "",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "DB connection created, opened, and closed successfully"
          },
          "404": {
            "description": "DB connection could not close or exception was thrown"
          }
        }
      }
    },
    "/UserStaff/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "get a staff user by their id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "id of staff member - could get from something like session storage or cookies?",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "authorization",
            "description": "baerer token for security and autorization",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      }
    },
    "/UserStaff/all": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "gets all staff members for display",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "baerer token for security and autorization",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "currently have returning a json list of all staff info including their role as a string"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      }
    },
    "/UserStaff/all/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "gets all staff members with a certain role for display",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "baerer token for security and autorization",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "id of the role we are hoping to filter by",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "currently have returning a json list of all staff info including their role as a string"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      }
    },
    "/UserCitizen/all": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "gets all citizens for display",
        "produces": [
          "application/json"
        ],
        "responses": {
          "202": {
            "description": "currently have returning a json list of all citizen info"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      }
    },
    "/UserStaff/role": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "assigns a role to a staff member",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "baerer token for security and autorization",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "staff_id",
            "description": "id of the staff we are assign the role to",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "role_id",
            "description": "id of the role we are assign the staff to",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "json here - can adjust response code"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "remove a role from a staff member",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "baerer token for security and autorization",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "staff_id",
            "description": "id of the staff we are removing the role from",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "role_id",
            "description": "id of the role we are removing from the staff",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "json here - can adjust response code"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      }
    },
    "/UserCitizen/address/{id}": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "adds an address to a citizen",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "id of the staff we are assign the address to",
            "type": "integer",
            "required": true
          },
          {
            "in": "body",
            "name": "address",
            "description": "address to assign to citizen",
            "schema": {
              "$ref": "#/definitions/Address"
            },
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "json here - can adjust response code"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "remove an address from a citizen",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "id of the citizen we are removing the address from",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "json here - can adjust response code"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      }
    },
    "/UserCitizen/insurance/{id}": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "adds an insurance to a citizen",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "id of the staff we are assign the insurance to",
            "type": "integer",
            "required": true
          },
          {
            "in": "body",
            "name": "address",
            "description": "insurance to assign to citizen",
            "schema": {
              "$ref": "#/definitions/Insurance"
            },
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "json here - can adjust response code"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "remove an insurance from a citizen",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "id of the citizen we are removing the insurance from",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "json here - can adjust response code"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      }
    },
    "/UserCitizen/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "get a citizen user by their id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "id of citizen member - could get from something like session storage or cookies?",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      }
    },
    "/UserStaff/self": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "delete a staff user - if staff wants to delete themselves",
        "parameters": [
          {
            "in": "query",
            "name": "username",
            "description": "username of staff member - if staff wants to delete themselves",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "email",
            "description": "email of staff member",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "authorization",
            "description": "baerer token for security and autorization",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "summary": "get info for self - staff",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "description": "get info for self",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "authorization",
            "description": "baerer token for security and autorization",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "put info for self - staff",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "token",
            "description": "put info for self",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Staff"
            }
          },
          {
            "in": "header",
            "name": "authorization",
            "description": "baerer token for security and authorization",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      }
    },
    "/UserStaff": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "get a staff user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "username",
            "description": "username of staff member",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "email",
            "description": "email of staff member",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "authorization",
            "description": "baerer token for security and authorization",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "update a staff user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Staff object that needs to be updated in the application (all fields optional aside from unique identifiers)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Staff"
            }
          },
          {
            "in": "header",
            "name": "authorization",
            "description": "baerer token for security and authorization",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "delete a staff user- admin only",
        "parameters": [
          {
            "in": "query",
            "name": "username",
            "description": "username of staff member - ADMIN ONLY",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "email",
            "description": "email of staff member",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "authorization",
            "description": "baerer token for security and authorization",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "add a staff user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Staff object that needs to be added to the application",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Staff"
            }
          },
          {
            "in": "header",
            "name": "authorization",
            "description": "baerer token for security and authorization",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      }
    },
    "/UserStaff/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "authenticate a staff member",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "citizen auth info to be authenticated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Authenticate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "probably some kind of token that contains info about user? like name or id or something?"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      }
    },
    "/UserStaff/role/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "get all roles of a staff member",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "id of citizen getting the role of",
            "required": true,
            "type": "integer"
          },
          {
            "in": "header",
            "name": "authorization",
            "description": "baerer token for security and authorization",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "list of roles"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      }
    },
    "/UserStaff/role/self": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "get all roles of a self (staff member)",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "baerer token for security and authorization",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "list of roles"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      }
    },
    "/UserCitizen": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "get a citizen user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "first_name",
            "description": "first name of citizen",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "last_name",
            "description": "first name of citizen",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "email",
            "description": "email of citizen",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "update a citizen user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Citizen object that needs to be updated in the application (all fields optional aside from unique identifiers)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Citizen"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "delete a citizen user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "first_name",
            "description": "first name of citizen",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "last_name",
            "description": "first name of citizen",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "email",
            "description": "email of citizen",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "add a citizen user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "citizen object that needs to be added to the application",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Citizen"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      }
    },
    "/UserStaff/password": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "changing staff member password",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "password and user id required ONLY - resets current password with password",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Staff"
            }
          },
          {
            "in": "header",
            "name": "authorization",
            "description": "baerer token for security and autorization",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "json here - can adjust response code"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      }
    },
    "/Appointment": {
      "post": {
        "tags": [
          "Appointments & Timeslots"
        ],
        "summary": "creates an available appointment for a citizen to register for (priviliged users)",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "baerer token for security and autorization",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "Timeslot",
            "description": "create a timeslot for a dose at a location for a certain time with default status (citizen ID, staffID, doseID, and timeslotID should remain null)",
            "schema": {
              "$ref": "#/definitions/Timeslot"
            },
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "json here - can adjust response code"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      },
      "delete": {
        "tags": [
          "Appointments & Timeslots"
        ],
        "summary": "remove a timeslot",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "baerer token for security and autorization",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "appointment_id",
            "description": "id of the timeslot we are removing",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "json here - can adjust response code"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      },
      "get": {
        "tags": [
          "Appointments & Timeslots"
        ],
        "summary": "gets appointments of certain type",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "baerer token for security and autorization",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "category_id",
            "description": "the timeslot filtered by categoryID (first dose, second dose, etc)",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "vaccine_supplier",
            "description": "the timeslot filtered by supplier of the vaccine (Pfizer, Moderna, etc)",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "json here - can adjust response code"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      }
    },
    "/Appointment/all": {
      "get": {
        "tags": [
          "Appointments & Timeslots"
        ],
        "summary": "get all appointments",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "baerer token for security and autorization",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "json here - can adjust response code"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      }
    },
    "/Appointment/all/open": {
      "get": {
        "tags": [
          "Appointments & Timeslots"
        ],
        "summary": "get all open appointments",
        "produces": [
          "application/json"
        ],
        "responses": {
          "202": {
            "description": "json here - can adjust response code"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      }
    },
    "/Appointment/all/open/{vaccine_supplier}": {
      "get": {
        "tags": [
          "Appointments & Timeslots"
        ],
        "summary": "gets appointments of certain type",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "category_id",
            "description": "the timeslot filtered by categoryID (first dose, second dose, etc)",
            "type": "integer",
            "required": true
          },
          {
            "in": "path",
            "name": "vaccine_supplier",
            "description": "the timeslot filtered by supplier of the vaccine (Pfizer, Moderna, etc)",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "json here - can adjust response code"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      }
    },
    "/Appointment/all/location/open": {
      "get": {
        "tags": [
          "Appointments & Timeslots"
        ],
        "summary": "gets open appointments at a certain location",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "location_id",
            "description": "the timeslot filtered by locationID",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "json here - can adjust response code"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      }
    },
    "/Appointment/all/location": {
      "get": {
        "tags": [
          "Appointments & Timeslots"
        ],
        "summary": "gets appointments at a certain location",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "baerer token for security and autorization",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "location_id",
            "description": "the timeslot filtered by locationID",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "json here - can adjust response code"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      }
    },
    "/Appointment/all/location/{supplier}": {
      "get": {
        "tags": [
          "Appointments & Timeslots"
        ],
        "summary": "gets appointments at a certain location with a certain vaccine type",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "baerer token for security and autorization",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "supplier",
            "description": "the supplier of the vaccine",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "category_id",
            "description": "the timeslot filtered by categoryID",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "location_id",
            "description": "the timeslot filtered by locationID",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "json here - can adjust response code"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      }
    },
    "/Appointment/all/location/open/{supplier}": {
      "get": {
        "tags": [
          "Appointments & Timeslots"
        ],
        "summary": "gets open appointments at a certain location with a certain vaccine type",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "baerer token for security and autorization",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "supplier",
            "description": "the supplier of the vaccine",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "category_id",
            "description": "the timeslot filtered by categoryID",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "location_id",
            "description": "the timeslot filtered by locationID",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "json here - can adjust response code"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      }
    },
    "/Appointment/citizen/{id}": {
      "get": {
        "tags": [
          "Appointments & Timeslots"
        ],
        "summary": "get all appointments that a certain citizen has",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "baerer token for security and autorization",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "the id of the citizen appointments will be filtered by",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "json here - can adjust response code"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      }
    },
    "/Appointment/date": {
      "get": {
        "tags": [
          "Appointments & Timeslots"
        ],
        "summary": "get all appointments for a certain date (usecase example: staff get appointments for current day)",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "baerer token for security and autorization",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "date",
            "description": "date value to search on - needs to be in format YYYY-MM-DD",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "json here - can adjust response code"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      }
    },
    "/Appointment/date/{location_id}": {
      "get": {
        "tags": [
          "Appointments & Timeslots"
        ],
        "summary": "get all appointments for a certain date (usecase example: staff get appointments for current day)",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "baerer token for security and autorization",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "date",
            "description": "date value to search on - needs to be in format YYYY-MM-DD",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "location_id",
            "description": "location searching on",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "json here - can adjust response code"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      }
    },
    "/Appointment/{id}": {
      "get": {
        "tags": [
          "Appointments & Timeslots"
        ],
        "summary": "get appointment by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "baerer token for security and autorization",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "get timeslot by this id",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "json here - can adjust response code"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      }
    },
    "/Appointment/Signup": {
      "put": {
        "tags": [
          "Appointments & Timeslots"
        ],
        "summary": "updates an appointment with citizen id (when citizen signs up)",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Timeslot",
            "description": "sign a citizen up for a timeslot (ONLY accepts citizenID and timeslotID), auto-gets available dosage if available",
            "schema": {
              "$ref": "#/definitions/Timeslot"
            },
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "json here - can adjust response code"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      }
    },
    "/Appointment/AssignStaff": {
      "put": {
        "tags": [
          "Appointments & Timeslots"
        ],
        "summary": "updates an appointment with staff id (when staff assigned to a timeslot) - does not check if staff is assigned to other appointment at that time, but should not be issue (will be assigned once available)",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "baerer token for security and autorization",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "Timeslot",
            "description": "assign a staff member to a timeslot (ONLY accepts staffID and timeslotID)",
            "schema": {
              "$ref": "#/definitions/Timeslot"
            },
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "json here - can adjust response code"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      }
    },
    "/Appointment/UpdateStatus": {
      "put": {
        "tags": [
          "Appointments & Timeslots"
        ],
        "summary": "updates an appointment with status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "baerer token for security and autorization",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "Timeslot",
            "description": "status to update timeslot to (ONLY timeslot_id and status)",
            "schema": {
              "$ref": "#/definitions/Timeslot"
            },
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "json here - can adjust response code"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      }
    },
    "/vaccine/all": {
      "get": {
        "tags": [
          "Vaccines"
        ],
        "summary": "gets all vaccines for display",
        "produces": [
          "application/json"
        ],
        "responses": {
          "202": {
            "description": "json list of all vaccine info"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      }
    },
    "/vaccine": {
      "post": {
        "tags": [
          "Vaccines"
        ],
        "summary": "Create a new vaccine (priviliged users)",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "baerer token for security and autorization",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "Vaccine",
            "description": "Create a vaccine (vaccine ID should remain null)",
            "schema": {
              "$ref": "#/definitions/Vaccine"
            },
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "json here - can adjust response code"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      },
      "put": {
        "tags": [
          "Vaccines"
        ],
        "summary": "Update a vaccine",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "Bearer token for security and autorization",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "Vaccine",
            "description": "The vaccine being updated (must have existing vaccine_id)",
            "schema": {
              "$ref": "#/definitions/Vaccine"
            },
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "json here - can adjust response code"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      },
      "get": {
        "tags": [
          "Vaccines"
        ],
        "summary": "Get vaccines by category or disease",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "category_id",
            "description": "Vaccine filtered by categoryID (first dose, second dose, etc)",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "disease_id",
            "description": "Vaccine filtered by diseaseID (COVID19, FLU, etc)",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "json here - can adjust response code"
          },
          "400": {
            "description": "json here - can adjust response code"
          },
          "404": {
            "description": "json here - can adjust response code"
          },
          "405": {
            "description": "json here - can adjust response code"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "Timeslot": {
      "type": "object",
      "properties": {
        "timeslot_id": {
          "type": "integer",
          "format": "int64"
        },
        "staff_id": {
          "type": "integer",
          "format": "int64"
        },
        "citizen_id": {
          "type": "integer",
          "format": "int64"
        },
        "location_id": {
          "type": "integer",
          "format": "int64"
        },
        "dose_id": {
          "type": "integer",
          "format": "int64"
        },
        "date": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Vaccine": {
      "type": "object",
      "properties": {
        "vaccine_id": {
          "type": "integer",
          "format": "int64"
        },
        "category_id": {
          "type": "integer",
          "format": "int64"
        },
        "disease_id": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "Staff": {
      "type": "object",
      "properties": {
        "staff_id": {
          "type": "integer",
          "format": "int64"
        },
        "email": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        }
      }
    },
    "Citizen": {
      "type": "object",
      "properties": {
        "citizen_id": {
          "type": "integer",
          "format": "int64"
        },
        "email": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "insurance_id": {
          "type": "integer",
          "format": "int64"
        },
        "date_of_birth": {
          "type": "string"
        },
        "address_id": {
          "type": "integer"
        },
        "phone_number": {
          "type": "string"
        }
      }
    },
    "Address": {
      "type": "object",
      "properties": {
        "address_id": {
          "type": "integer",
          "format": "int64"
        },
        "zip": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "street_line2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "Insurance": {
      "type": "object",
      "properties": {
        "insurance_id": {
          "type": "integer",
          "format": "int64"
        },
        "last_name": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "carrier": {
          "type": "string"
        },
        "group_number": {
          "type": "integer"
        },
        "member_id": {
          "type": "string"
        }
      }
    },
    "Authenticate": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "petId": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "shipDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Order Status",
          "enum": [
            "placed",
            "approved",
            "delivered"
          ]
        },
        "complete": {
          "type": "boolean",
          "default": false
        }
      },
      "xml": {
        "name": "Order"
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Category"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "userStatus": {
          "type": "integer",
          "format": "int32",
          "description": "User Status"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "Pet": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "name": {
          "type": "string",
          "example": "doggie"
        },
        "photoUrls": {
          "type": "array",
          "xml": {
            "name": "photoUrl",
            "wrapped": true
          },
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "status": {
          "type": "string",
          "description": "pet status in the store",
          "enum": [
            "available",
            "pending",
            "sold"
          ]
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}